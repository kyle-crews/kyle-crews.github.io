{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","transform","width","collectionTitle","collectionDescription","collectionPhoto","clientId","mintConfig","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c455876c.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { CrossmintPayButton } from \"@crossmint/client-sdk-react-ui\";\n\nconst truncate = (input, len) =>\n    input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button `\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button `\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div `\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img `\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img `\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a `\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n    const dispatch = useDispatch();\n    const blockchain = useSelector((state) => state.blockchain);\n    const data = useSelector((state) => state.data);\n    const [claimingNft, setClaimingNft] = useState(false);\n    const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n    const [mintAmount, setMintAmount] = useState(1);\n    const [CONFIG, SET_CONFIG] = useState({\n        CONTRACT_ADDRESS: \"\",\n        SCAN_LINK: \"\",\n        NETWORK: {\n            NAME: \"\",\n            SYMBOL: \"\",\n            ID: 0,\n        },\n        NFT_NAME: \"\",\n        SYMBOL: \"\",\n        MAX_SUPPLY: 1,\n        WEI_COST: 0,\n        DISPLAY_COST: 0,\n        GAS_LIMIT: 0,\n        MARKETPLACE: \"\",\n        MARKETPLACE_LINK: \"\",\n        SHOW_BACKGROUND: false,\n    });\n\n    const claimNFTs = () => {\n        let cost = CONFIG.WEI_COST;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        console.log(\"Cost: \", totalCostWei);\n        console.log(\"Gas limit: \", totalGasLimit);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n        blockchain.smartContract.methods\n            .mint(mintAmount)\n            .send({\n                gasLimit: String(totalGasLimit),\n                to: CONFIG.CONTRACT_ADDRESS,\n                from: blockchain.account,\n                value: totalCostWei,\n            })\n            .once(\"error\", (err) => {\n                console.log(err);\n                setFeedback(\"Sorry, something went wrong please try again later.\");\n                setClaimingNft(false);\n            })\n            .then((receipt) => {\n                console.log(receipt);\n                setFeedback(\n                    `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n                );\n                setClaimingNft(false);\n                dispatch(fetchData(blockchain.account));\n            });\n    };\n\n    const decrementMintAmount = () => {\n        let newMintAmount = mintAmount - 1;\n        if (newMintAmount < 1) {\n            newMintAmount = 1;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const incrementMintAmount = () => {\n        let newMintAmount = mintAmount + 1;\n        if (newMintAmount > 25) {\n            newMintAmount = 25;\n        }\n        setMintAmount(newMintAmount);\n    };\n\n    const getData = () => {\n        if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n            dispatch(fetchData(blockchain.account));\n        }\n    };\n\n    const getConfig = async() => {\n        const configResponse = await fetch(\"/config/config.json\", {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n        });\n        const config = await configResponse.json();\n        SET_CONFIG(config);\n    };\n\n    useEffect(() => {\n        getConfig();\n    }, []);\n\n    useEffect(() => {\n        getData();\n    }, [blockchain.account]);\n\n    return ( <\n            s.Screen >\n            <\n            s.Container flex = { 1 }\n            ai = { \"center\" }\n            style = {\n                { padding: 24, backgroundColor: \"var(--primary)\" }\n            }\n            image = { CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null } >\n            <\n            StyledLogo alt = { \"logo\" }\n            src = { \"/config/images/logo.png\" }\n            /> <\n            s.SpacerSmall / >\n            <\n            ResponsiveWrapper flex = { 1 }\n            style = {\n                { padding: 24 }\n            }\n            test >\n            <\n            s.Container flex = { 1 }\n            jc = { \"center\" }\n            ai = { \"center\" } >\n            <\n            StyledImg alt = { \"example\" }\n            src = { \"/config/images/example.gif\" }\n            /> < /\n            s.Container > <\n            s.SpacerLarge / >\n            <\n            s.Container flex = { 2 }\n            jc = { \"center\" }\n            ai = { \"center\" }\n            style = {\n                {\n                    backgroundColor: \"var(--accent)\",\n                    padding: 24,\n                    borderRadius: 24,\n                    border: \"4px dashed var(--secondary)\",\n                    boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                }\n            } >\n            <\n            s.TextTitle style = {\n                {\n                    textAlign: \"center\",\n                    fontSize: 50,\n                    fontWeight: \"bold\",\n                    color: \"var(--accent-text)\",\n                }\n            } > { data.totalSupply }\n            / {CONFIG.MAX_SUPPLY} < /\n            s.TextTitle > <\n            s.TextDescription style = {\n                {\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                }\n            } >\n            <\n            StyledLink target = { \"_blank\" }\n            href = { CONFIG.SCAN_LINK } > { truncate(CONFIG.CONTRACT_ADDRESS, 15) } <\n            /StyledLink> < /\n            s.TextDescription > <\n            s.SpacerSmall / > {\n                Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? ( <\n                    >\n                    <\n                    s.TextTitle style = {\n                        { textAlign: \"center\", color: \"var(--accent-text)\" }\n                    } >\n                    The sale has ended. <\n                    /s.TextTitle> <\n                    s.TextDescription style = {\n                        { textAlign: \"center\", color: \"var(--accent-text)\" }\n                    } >\n                    You can still find { CONFIG.NFT_NAME }\n                    on <\n                    /s.TextDescription> <\n                    s.SpacerSmall / >\n                    <\n                    StyledLink target = { \"_blank\" }\n                    href = { CONFIG.MARKETPLACE_LINK } > { CONFIG.MARKETPLACE } <\n                    /StyledLink> < / >\n                ) : ( <\n                        >\n                        <\n                        s.TextTitle style = {\n                            { textAlign: \"center\", color: \"var(--accent-text)\" }\n                        } >\n                        1 { CONFIG.SYMBOL }\n                        costs { CONFIG.DISPLAY_COST } { \" \" } { CONFIG.NETWORK.SYMBOL }. <\n                        /s.TextTitle> <\n                        s.SpacerXSmall / >\n                        <\n                        s.TextDescription style = {\n                            { textAlign: \"center\", color: \"var(--accent-text)\" }\n                        } >\n                        Excluding gas fees. <\n                        /s.TextDescription> <\n                        s.SpacerSmall / > {\n                            blockchain.account === \"\" ||\n                            blockchain.smartContract === null ? ( <\n                                s.Container ai = { \"center\" }\n                                jc = { \"center\" } >\n                                <\n                                s.TextDescription style = {\n                                    {\n                                        textAlign: \"center\",\n                                        color: \"var(--accent-text)\",\n                                    }\n                                } >\n                                Connect to the { CONFIG.NETWORK.NAME }\n                                network <\n                                /s.TextDescription> <\n                                s.SpacerSmall / >\n                                <\n                                StyledButton onClick = {\n                                    (e) => {\n                                        e.preventDefault();\n                                        dispatch(connect());\n                                        getData();\n                                    }\n                                } >\n                                CONNECT <\n                                /StyledButton> {\n                                blockchain.errorMsg !== \"\" ? ( <\n                                    >\n                                    <\n                                    s.SpacerSmall / >\n                                    <\n                                    s.TextDescription style = {\n                                        {\n                                            textAlign: \"center\",\n                                            color: \"var(--accent-text)\",\n                                        }\n                                    } > { blockchain.errorMsg } <\n                                    /s.TextDescription> < / >\n                                ) : null\n                            } <\n                            /s.Container>\n                        ): ( <\n                            >\n                            <\n                            s.TextDescription style = {\n                                {\n                                    textAlign: \"center\",\n                                    color: \"var(--accent-text)\",\n                                }\n                            } > { feedback } <\n                            /s.TextDescription> <\n                            s.SpacerMedium / >\n                            <\n                            s.Container ai = { \"center\" }\n                            jc = { \"center\" }\n                            fd = { \"row\" } >\n                            <\n                            StyledRoundButton style = {\n                                { lineHeight: 0.4 }\n                            }\n                            disabled = { claimingNft ? 1 : 0 }\n                            onClick = {\n                                (e) => {\n                                    e.preventDefault();\n                                    decrementMintAmount();\n                                }\n                            } >\n                            -\n                            <\n                            /StyledRoundButton> <\n                            s.SpacerMedium / >\n                            <\n                            s.TextDescription style = {\n                                {\n                                    textAlign: \"center\",\n                                    color: \"var(--accent-text)\",\n                                }\n                            } > { mintAmount } <\n                            /s.TextDescription> <\n                            s.SpacerMedium / >\n                            <\n                            StyledRoundButton disabled = { claimingNft ? 1 : 0 }\n                            onClick = {\n                                (e) => {\n                                    e.preventDefault();\n                                    incrementMintAmount();\n                                }\n                            } >\n                            +\n                            <\n                            /StyledRoundButton> < /\n                            s.Container > <\n                            s.SpacerSmall / >\n                            <\n                            s.Container ai = { \"center\" }\n                            jc = { \"center\" }\n                            fd = { \"row\" } >\n                            <\n                            StyledButton disabled = { claimingNft ? 1 : 0 }\n                            onClick = {\n                                (e) => {\n                                    e.preventDefault();\n                                    claimNFTs();\n                                    getData();\n                                }\n                            } > { claimingNft ? \"BUSY\" : \"BUY\" } <\n                            /StyledButton> < /\n                            s.Container > <\n                            />\n                        )\n                    } <\n                    />\n            )\n        } <\n        s.SpacerMedium / >\n        <\n        /s.Container> <\n    s.SpacerLarge / >\n        <\n        s.Container flex = { 1 }\n    jc = { \"center\" }\n    ai = { \"center\" } >\n        <\n        StyledImg alt = { \"example\" }\n    src = { \"/config/images/example.gif\" }\n    style = {\n        { transform: \"scaleX(-1)\" }\n    }\n    /> < /\n    s.Container > <\n        /ResponsiveWrapper> <\n    s.SpacerMedium / >\n        <\n        s.Container jc = { \"center\" }\n    ai = { \"center\" }\n    style = {\n            { width: \"70%\" }\n        } >\n        <\n        s.TextDescription style = {\n            {\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n            }\n        } >\n        Please make sure you are connected to the right network | ({ CONFIG.NETWORK.NAME }\n            Mainnet) | and the correct address || Please note:\n        Once you make the purchase, you cannot undo this action || If you would prefer to pay with a credit card, click the button below: <\n        /s.TextDescription>  <\n    CrossmintPayButton collectionTitle = \"Crypto Country Club\"\n    collectionDescription = \"An NFT community for golfers\"\n    collectionPhoto = \"<COLLECTION_IMAGE_URL>\"\n    clientId = \"38aa2d57-3b24-4b05-87b2-287d8d5bf16e\"\n    mintConfig = {\n        { \"type\": \"erc-721\", \"totalPrice\": \"0.05\", \"_mintAmount\": \"1\" }\n    }\n    /> <\n    s.SpacerSmall / >\n        <\n        s.TextDescription style = {\n            {\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n            }\n        } >\n        We have set the gas limit to | { CONFIG.GAS_LIMIT } |\n        for the contract to successfully mint your NFT || We recommend that you don 't lower the\n    gas limit || ©2022 Crypto Country Club, all rights reserved || Swing Easy <\n        /s.TextDescription> < /\n    s.Container > <\n        /s.Container> < /\n    s.Screen >\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}